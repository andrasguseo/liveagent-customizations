<!DOCTYPE html>
<html lang="en-US">
<head>
    <meta name="referrer" content="no-referrer">
	<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag.js%3Fid=UA-25096731-18"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-25096731-18');
</script>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="canonical" href="666307-Using-tribe_get_events" />            <link href="https://support.theeventscalendar.com/themes/kb/montana/kb.css%3Fv=5.14.4.4" rel="stylesheet" type="text/css"/>
        <link rel="stylesheet" href="https://support.theeventscalendar.com/index.php%3Ftype=css&amp;v=5.14.4.4&amp;c=1567196960" type="text/css">
        <link rel="apple-touch-icon" href="themes/kb/montana/img/apple-touch-icon.png" />
    <link type="image/x-icon" href="themes/kb/classic/img/favicon.ico" rel="shortcut icon" />
    <link type="image/x-icon" href="themes/kb/classic/img/favicon.ico" rel="icon" />    
    <link rel="mask-icon" href="themes/kb/montana/img/kb-mask-icon.svg" color="#F6921E">
        <script type="text/javascript">
        (function(d, src, c) { var t=d.scripts[d.scripts.length - 1],s=d.createElement('script');s.id='la_x2s6df8d';s.async=true;s.src=src;s.onload=s.onreadystatechange=function(){var rs=this.readyState;if(rs&&(rs!='complete')&&(rs!='loaded')){return;}c(this);};t.parentElement.insertBefore(s,t.nextSibling);})(document,
'//support.theeventscalendar.com/scripts/track.js',
function(e){});
    </script>       
            <title>Using tribe_get_events</title>        <meta name="keywords" content="Article,Advanced,Customizing Resources,Queries,improve text,time,events calendar,event,display,help,array,wordpress,range,upcoming,upcoming events,number of events,interested,examples,arguments,wp_query,tribe_get_events,date range,wp_query class,next 5,end_date" />    <meta property="og:url" content="//support.theeventscalendar.com/666307-Using-tribe_get_events" />    <meta property="og:title" content="Using tribe_get_events" />    <meta property="og:description" content="tribe_get_events() is a neat little helper function that makes it easy to retrieve event data when building customizations. In this tutorial, we&#039;ll look at how it works and provide some examples to ge" />    <meta property="og:type" content="article" />    <meta property="og:image" content="/scripts/file.php%3Fview=Y&file=7ac92ed24735aaa35e80b7775041b38b" />        <link rel="icon" type="image/x-icon" href="https://theeventscalendar.com/content/uploads/2015/04/favicon.ico">
<link rel="shortcut icon" type="image/x-icon" href="https://theeventscalendar.com/content/uploads/2015/04/favicon.ico">
<link rel="stylesheet" type="text/css" href="https://theeventscalendar.com/content/themes/tribe-ecp/fonts/256398/64880275E7FF236DE.css" />
<!-- <link id="tribe-css" rel="stylesheet" type="text/css" href="https://s3-staging.theeventscalendar.com/mt-support-tribe-helpdesk.css" /> -->
<link id="tribe-css" rel="stylesheet" type="text/css" href="https://support.theeventscalendar.com/style.min.css" />
<script type='text/javascript'>
var zaius = window['zaius']||(window['zaius']=[]);zaius.methods=["initialize","onload","event","entity","identify","anonymize","dispatch"];zaius.factory=function(e){return function(){var t=Array.prototype.slice.call(arguments);t.unshift(e);zaius.push(t);return zaius}};(function(){for(var i=0;i<zaius.methods.length;i++){var method=zaius.methods[i];zaius[method]=zaius.factory(method)}var e=document.createElement("script");e.type="text/javascript";e.async=true;e.src=("https:"===document.location.protocol?"https://":"http://")+"d1igp3oop3iho5.cloudfront.net/v2/cbYwQ5GKNtrS7WooZBsQEQ/zaius-min.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)})(); 
zaius.event('pageview');
</script>
</head>
<body class="montana  page-article">
	
             
	    <!-- nav -->
<nav class="navbar">
		<div class="container">

				<div class="navbar-header">
						<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
								<span class="sr-only"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span>
						</button>
						<a class="navbar-brand KBLogo" href="https://support.theeventscalendar.com/index.html"></a>
				</div>

				<div id="navbar" class="navbar-collapse collapse">
						<ul id="menu-header-menu" class="nav navbar-nav">
								<li id="menu-item-mytickets" class="menu-item"><a href="my_tickets#My-Tickets"><span class="glyphicon glyphicon-envelope" aria-hidden="true"></span> My tickets</a></li>
																		<li id="menu-item-submitticket" class="menu-item"><a href="submit_ticket"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Submit ticket</a></li>
								 
																		<li id="menu-item-login" class="menu-item"><a href="login"><span class="glyphicon glyphicon-off" aria-hidden="true"></span> Login</a></li>
														</ul>
				</div>
		</div>
</nav>	<!-- article -->
<div itemscope itemtype="https://schema.org/Article">
<div class="jumbotron inner-jumbotron jumbotron-inner-fix jumbotron-smaller">
  <div class="container inner-margin-top">
    <div class="row">
      <div class="col-md-12 col-sm-12" style="text-align:center">
        <h1 class="inner-header" itemprop="name">Using tribe_get_events</h1>
        <meta itemprop="author" content="The Events Calendar">
		<meta itemprop="headline" content="Using tribe_get_events">   
		<meta itemscope itemprop="mainEntityOfPage" itemType="https://schema.org/WebPage" itemid="//support.theeventscalendar.com/666307-Using-tribe_get_events"/>                  
         <span itemprop="publisher" itemscope itemtype="https://schema.org/Organization">    	
    		<meta itemprop="name" content="The Events Calendar">
          <span itemscope itemprop="logo" itemtype="https://schema.org/ImageObject">
          	<meta itemprop="url" content="/scripts/file.php%3Fview=Y&file=7ac92ed24735aaa35e80b7775041b38b">
          	<meta itemprop="width" content="300px">
          	<meta itemprop="height" content="200px">
          </span>		
  		 </span>
        
                <!-- breadcrumbs -->
<p class="breadcrumbs" itemscope itemtype="https://schema.org/BreadcrumbList">
			<span itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
		    		<a itemprop="item" href="https://support.theeventscalendar.com/index.html" class="breadcrumb-link">
    			<span itemprop="name">Home</span>
    		</a>    	
    	    	   <meta itemprop="position" content="1" />
    	</span>
    	    	    <span class="breadcrumb-divider">&gt;</span>
    	 	 
			<span itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
		    		<a itemprop="item" href="757786-General" class="breadcrumb-link">
    			<span itemprop="name">General</span>
    		</a>
            	   <meta itemprop="position" content="2" />
    	</span>
    	    	    <span class="breadcrumb-divider">&gt;</span>
    	 	 
		<span itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
		<span itemprop="item">
			<span itemprop="name">Using tribe_get_events</span>
			<meta itemprop="position" content="3" />
							<link itemprop="url" href="666307-Using-tribe_get_events" />
					</span>
	</span>
</p>      </div>
    </div>
  </div>
</div>
<div class="container article-page  margin-top margin-bottom">
  <div class="row">
  	<div class="col-md-9">	
   			<div class="article-content ArticleContent" itemprop="articleBody"><p><strong>tribe_get_events()</strong> is a neat little helper function that makes it easy to retrieve event data when building customizations. In this tutorial, we'll look at how it works and provide some examples to get you started.</p>

<p>If you're already familiar with the <a href="http://codex.wordpress.org/Class_Reference/WP_Query" rel="noopener" target="_blank">WP_Query class</a> or the <a href="http://codex.wordpress.org/Template_Tags/get_posts" rel="noopener" target="_blank">get_posts() function</a> provided by WordPress, then working with tribe_get_events() should feel very familiar. For anyone who is unfamiliar with those parts of WordPress, I'd definitely recommend reviewing the linked documentation - especially if you want to do something really gnarly.</p>

<h3 id="basic-usage">Basic Usage</h3>

<p>When you call tribe_get_events() you can expect it to return an array of events (this could, of course, be an empty array if it can't find what you're looking for). Quite often you will also want to pass in some arguments to narrow down the sort of events you are trying to find, but that's not actually necessary.</p>

<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; background: rgb(39, 40, 34) none repeat scroll 0% 0%; color: rgb(221, 221, 221);">
<span class="hljs-comment" style="color: rgb(117, 113, 94);">// Retrieve the next 5 upcoming events</span>
$events = tribe_get_events( <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">[</span> 
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'posts_per_page'</span> =&gt; <span class="hljs-number">5</span>, 
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'start_date'</span>     =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'now'</span>,
<span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">]</span> );</pre>

<p>The above code simply retrieves a list of upcoming events.</p>

<p>We haven't actually told it how many events we are interested in and so it will assume you want up to the same value specified in the <em>number of events to show per page</em> settings (found in the Events → Settings → General admin screen). By default that is 10 events.</p>

<p>As alluded to above, there is a very strong link between tribe_get_events() and the <a href="http://codex.wordpress.org/Class_Reference/WP_Query" rel="noopener" target="_blank">WP_Query class</a> - we can, in fact, use most or all of the same query arguments in both cases.</p>

<p>Let's look at how this works and how we might restrict the number of events we are interested in from the default value to just 5, by supplying a <a href="http://codex.wordpress.org/Class_Reference/WP_Query#Pagination_Parameters" rel="noopener" target="_blank">posts_per_page</a> argument:</p>

<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; background: rgb(39, 40, 34) none repeat scroll 0% 0%; color: rgb(221, 221, 221);">
<span class="hljs-comment" style="color: rgb(117, 113, 94);">// Retrieve the next 5 upcoming events</span>
$events = tribe_get_events( <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">[</span> 
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'posts_per_page'</span> =&gt; <span class="hljs-number">5</span>, 
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'start_date'</span>     =&gt;<span class="hljs-string" style="color: rgb(166, 226, 46);"> 'now',</span>
<span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">]</span> );</pre>

<p>Our extra arguments are contained within an array and, this time, $events will contain an array of up to 5 upcoming events.</p>

<h3 id="displaying-events">Displaying Events</h3>

<p>Quite often you will want to display your events after you have retrieved them. An obvious and simple approach - though not without its shortcomings - is to do something like this:<span style="color:#a6b2c0;"> </span></p>

<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; background: rgb(39, 40, 34) none repeat scroll 0% 0%; color: rgb(221, 221, 221);">
$events = tribe_get_events( <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">[</span> <span class="hljs-string" style="color: rgb(166, 226, 46);">'posts_per_page'</span> =&gt; <span class="hljs-number">5 </span><span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">]</span> );

<span class="hljs-comment" style="color: rgb(117, 113, 94);">// Loop through the events, displaying the title and content for each</span>
<span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">foreach</span> ( $events <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">as</span> $event ) {
   <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">echo</span> <span class="hljs-string" style="color: rgb(166, 226, 46);">'&lt;h4&gt;'</span> . $event-&gt;post_title . <span class="hljs-string" style="color: rgb(166, 226, 46);">'&lt;/h4&gt;'</span>;
   <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">echo</span> wpautop( $event-&gt;post_content );
}</pre>

<p>Such a "quick and dirty" approach could be fine if all you need to do is inspect some properties of each event but to display them it is generally better to do things the WordPress way and use the appropriate template tags:</p>

<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; background: rgb(39, 40, 34) none repeat scroll 0% 0%; color: rgb(221, 221, 221);">
<span class="hljs-comment" style="color: rgb(117, 113, 94);">// Ensure the global $post variable is in scope</span>
<span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">global</span> $post;

<span class="hljs-comment" style="color: rgb(117, 113, 94);">// Retrieve the next 5 upcoming events</span>
$events = tribe_get_events( <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">[</span> <span class="hljs-string" style="color: rgb(166, 226, 46);">'posts_per_page'</span> =&gt; <span class="hljs-number">5</span> <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">]</span> );

<span class="hljs-comment" style="color: rgb(117, 113, 94);">// Loop through the events: set up each one as</span>
<span class="hljs-comment" style="color: rgb(117, 113, 94);">// the current post then use template tags to</span>
<span class="hljs-comment" style="color: rgb(117, 113, 94);">// display the title and content</span>
<span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">foreach</span> ( $events <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">as</span> $post ) {
   setup_postdata( $post );

   <span class="hljs-comment" style="color: rgb(117, 113, 94);">// This time, let's throw in an event-specific</span>
   <span class="hljs-comment" style="color: rgb(117, 113, 94);">// template tag to show the date after the title!</span>
   <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">echo</span> <span class="hljs-string" style="color: rgb(166, 226, 46);">'&lt;h4&gt;'</span> . $post-&gt;post_title . <span class="hljs-string" style="color: rgb(166, 226, 46);">'&lt;/h4&gt;'</span>;
   <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">echo</span> <span class="hljs-string" style="color: rgb(166, 226, 46);">'&lt;p&gt;'</span> . tribe_get_start_date( $post ) . <span class="hljs-string" style="color: rgb(166, 226, 46);">'&lt;/p&gt;'</span>;
}</pre>

<p>This is arguably more readable - we're not constantly referencing the event/post object - and we also benefit from all the many filters and other good things that WordPress (and to some extent The Events Calendar) take care of behind the scenes.</p>

<h3 id="event-specific-arguments">Event Specific Arguments</h3>

<p>So far so good: we can retrieve events and apply standard WP_Query arguments, like <em>posts_per_page</em>, to control it. As we're dealing with events here, rather than pages or blog posts, The Events Calendar exposes some additional arguments that are not normally available but which make life easier when working with events:</p>

<ul>
	<li><strong>start_date</strong> is used to indicate the start of the date range you are interested in</li>
	<li><strong>end_date</strong> is of course what you would use to indicate the end of the date range you are interested in</li>
</ul>

<p>There are some potential "gotchas" here that hopefully make some sense once you've thought them through.</p>

<p>One is that setting a <em>start_date</em> earlier than today when the query is for <em>upcoming</em> events will not have any impact. The flip side is that setting an <em>end_date</em> later than today when querying for <em>past</em> events similarly will have no effect, both will automatically be overwritten.</p>

<p>Also, when supplying values for the <span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">start_date</span></span> and <span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">end_date</span></span><em>,</em> I recommend you use one of the following formats (others may work - but don't count on it!):</p>

<ul>
	<li><span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">Y-m-d H:i</span></span> (ie, 2014-12-31 12:00 for noon on December 31st, 2014) if you need to specify the time</li>
	<li><span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">Y-m-d</span></span> (ie, 2015-07-01 for July 1st, 2015) if you don't need the extra accuracy specifying a time provides</li>
</ul>

<p>Both <span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">start_date</span></span> and <span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">end_date</span></span> will accept any values that the PHP function <span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">strtotime()</span></span> would. Examples:</p>

<ul>
	<li><span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">now</span></span> - For the current second</li>
	<li><span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">today</span></span> - For the first second of today</li>
	<li><span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">last month</span></span> - For the start of last month</li>
	<li><span style="font-family:courier new,courier,monospace;"><span style="background-color:#eeeeee;">next monday</span></span> - For the start of the day on the next monday</li>
</ul>

<h3 id="examples">Examples</h3>

<p id="examples">We'll finish off with a set of examples that you can use as the basis of your own tribe_get_events() queries.</p>

<h4 id="all-events-in-time-range">Get all events in a specific time range:<span style="color:#a6b2c0;"> </span></h4>

<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; background: rgb(39, 40, 34) none repeat scroll 0% 0%; color: rgb(221, 221, 221);">
<span class="hljs-comment" style="color: rgb(117, 113, 94);">// Retrieve all events in October 2014</span>
$events = tribe_get_events( <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">[</span>
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'eventDisplay'</span> =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'custom'</span>,
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'start_date'</span>   =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'2014-10-01 00:01'</span>,
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'end_date'</span>     =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'2014-10-31 23:59'</span>,
<span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">]</span> );</pre>

<p>Upcoming events taking place after a certain date<span style="color:#a6b2c0;">:</span></p>

<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; background: rgb(39, 40, 34) none repeat scroll 0% 0%; color: rgb(221, 221, 221);">
<span class="hljs-comment" style="color: rgb(117, 113, 94);">// Retrieve any upcoming events starting January 1st, 2015, or later</span>
$events = tribe_get_events( <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">[</span> 
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'eventDisplay'</span> =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'list'</span>,
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'start_date'</span>   =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'2015-01-01'</span>,
<span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">]</span> );</pre>

<p>Grab the next 5 events with a specific tag:</p>

<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; background: rgb(39, 40, 34) none repeat scroll 0% 0%; color: rgb(221, 221, 221);">
<span class="hljs-comment" style="color: rgb(117, 113, 94);">// Grab the 5 next "party" events (by tag)</span>
$events = tribe_get_events( <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">[</span>
<span class="hljs-string" style="color: rgb(166, 226, 46);">   'start_date'</span>     =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'now'</span>,
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'eventDisplay'</span>   =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'list'</span>,
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'posts_per_page'</span> =&gt; <span class="hljs-number">5</span>,
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'tag'</span>            =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'party'</span> <span class="hljs-comment" style="color: rgb(117, 113, 94);">// or whatever the tag name is</span>
<span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">]</span> );</pre>

<h4 id="featured-events">Display the next 5 featured events:</h4>

<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; background: rgb(39, 40, 34) none repeat scroll 0% 0%; color: rgb(221, 221, 221);">
<span class="hljs-comment" style="color: rgb(117, 113, 94);">// Grab the 5 next "party" events (by tag)</span>
$events = tribe_get_events( <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">[</span> 
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'eventDisplay'</span>   =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'custom'</span>,
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'start_date'</span>     =&gt; <span class="hljs-string" style="color: rgb(166, 226, 46);">'now'</span>,
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'posts_per_page'</span> =&gt; <span class="hljs-number">8</span>, 
   <span class="hljs-string" style="color: rgb(166, 226, 46);">'featured'</span>       =&gt; <span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">true</span>,
<span class="hljs-keyword" style="color: rgb(249, 38, 114); font-weight: 700;">]</span> );</pre>

<p>Hopefully this tutorial and the above examples can help you get started with <em>tribe_get_events()</em>. If you need help, you can always post to our help desk, and we'll do our best to point you in the right direction.</p>
</div>    			
				<div class="Files">
					    			
    			</div>  
          <div class="ArticleInfo">          
          <span itemscope itemprop="image" itemtype="https://schema.org/ImageObject">
          	<meta itemprop="url" content="/scripts/file.php%3Fview=Y&file=7ac92ed24735aaa35e80b7775041b38b">
          	<meta itemprop="width" content="300px">
          	<meta itemprop="height" content="200px">
          </span>
                          <div class="ArticleUpdated" title="Apr 19, 2019, 01:39 PM">
                <span class="ArticleInfoLabel">Updated:</span> <span class="ArticleInfoValue"><time datetime="2019-04-19" itemprop="dateModified">Apr 19 (4 months ago)</time></span>
              </div>
                        <time datetime="2018-10-30" itemprop="datePublished"></time>
          </div>
		</div>			
		<div class="col-md-3">
				<!-- search_box -->
<div class="margin-bottom" itemscope itemtype="https://schema.org/WebSite">
	<meta itemprop="url" content="./" />
    <form action="https://support.theeventscalendar.com/search" method="get" itemprop="potentialAction" itemscope itemtype="https://schema.org/SearchAction">
    	<div class="input-group">
    	<meta itemprop="target" content="search?q={q}"/>
        <input itemprop="query-input" type="text" name="q" value="" class="form-control SearchText" required>
        <input type="hidden" name="pid" value="291">
        <input type="hidden" name="type" value="search">
        <input type="hidden" name="upid" value="">
      	<span class="input-group-btn">
        	<input class="btn btn-default btn-searchbox" type="submit" value="Search">
      	</span>
	    </div>
    </form>
</div>				<!-- right_other_articles -->
<div class="panel panel-default">
	<div class="panel-heading"><h4>Other Articles</h4></div>
  <ul class="panel-body list-group">
        <li class="list-group-item item-A"><a href="997896-How-to-Put-a-Subscription-on-Hold" class="article-link article-link-913" title="How to Put a Subscription on Hold">
        <span class="TitleValue">How to Put a Subscription on Hold</span>
      </a></li>
        <li class="list-group-item item-A"><a href="163659-Shortcodes" class="article-link article-link-911" title="Shortcodes">
        <span class="TitleValue">Shortcodes</span>
      </a></li>
        <li class="list-group-item item-A"><a href="922718-Solution-for-Error-Publishing-failed-on-PHP-56" class="article-link article-link-891" title="Solution for Error: Publishing failed on PHP 5.6">
        <span class="TitleValue">Solution for Error: Publishing failed on PHP 5.6</span>
      </a></li>
        <li class="list-group-item item-A"><a href="200254-How-to-Test-Block-Editor-with-Events-Calendar" class="article-link article-link-873" title="How to Test Block Editor with Events Calendar">
        <span class="TitleValue">How to Test Block Editor with Events Calendar</span>
      </a></li>
        <li class="list-group-item item-A"><a href="601613-Removing-Block-Editor-Detritus-From-Your-Posts-" class="article-link article-link-877" title="Removing Block Editor Detritus From Your Posts ">
        <span class="TitleValue">Removing Block Editor Detritus From Your Posts </span>
      </a></li>
        <li class="list-group-item item-A"><a href="874931-Deprecation-of-the-Block-Editor-Toggle" class="article-link article-link-881" title="Deprecation of the Block Editor Toggle">
        <span class="TitleValue">Deprecation of the Block Editor Toggle</span>
      </a></li>
        <li class="list-group-item item-A"><a href="588130-Pre-Sales-Questions" class="article-link article-link-865" title="Pre-Sales Questions">
        <span class="TitleValue">Pre-Sales Questions</span>
      </a></li>
        <li class="list-group-item item-A"><a href="345413-General-Sales--Account-Questions" class="article-link article-link-859" title="General Sales &amp; Account Questions">
        <span class="TitleValue">General Sales &amp; Account Questions</span>
      </a></li>
        <li class="list-group-item item-A"><a href="210263-Free-Support-Resources" class="article-link article-link-857" title="Free Support Resources">
        <span class="TitleValue">Free Support Resources</span>
      </a></li>
        <li class="list-group-item item-A"><a href="315237-Creating-Site-Backups" class="article-link article-link-729" title="Creating Site Backups">
        <span class="TitleValue">Creating Site Backups</span>
      </a></li>
    </ul>
        <div class="panel-footer"><a href="757786-General" class="MoreLinkTitle">and 70 more ...</a></div>
  </div>
		</div>
	</div>
</div>
</div>
<script type="text/javascript">

    var searchId = document.location.hash.replace('#', '');
    var headTag = document.getElementsByTagName("head").item(0);
    var scriptTag = document.createElement("script");
    scriptTag.setAttribute("type", "text/javascript");
    scriptTag.setAttribute("src", "/track.php%3Fid=291&searchId="+searchId);
    headTag.appendChild(scriptTag);

</script>		<footer>
					<div class="footer__wrapper">
  <div class="footer__brand">
    <div class="footer__logo">
      <img src="https://theeventscalendar.com/content/uploads/2019/04/tec-full-logo-inverted.png" alt="The Events Calendar">
    </div>
  </div>

  <div class="footer__nav">
    &copy; A Modern Tribe Hootenanny <span>|</span> 
    <a href="https://theeventscalendar.com/terms">Terms</a>
    <span>|</span> 
    <a href="https://theeventscalendar.com/privacy-policy/">Privacy
  </div>
</div>
					<div class="footer-container">
				<div class="container">
					
				</div>
			</div>
		</footer>
	<a href="666307-Using-tribe_get_events#top" id="scroll-top"><span class="glyphicon glyphicon-chevron-up"></span></a>
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://support.theeventscalendar.com/themes/kb/montana/js/jquery.min.js%3Fv=5.14.4.4"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="https://support.theeventscalendar.com/themes/kb/montana/js/bootstrap.min.js%3Fv=5.14.4.4"></script>
    <script src="https://support.theeventscalendar.com/themes/kb/montana/js/fixedmenu.js%3Fv=5.14.4.4"></script>
    <!-- <script id="tribe-js" defer src="https://s3-staging.theeventscalendar.com/mt-support-tribe-helpdesk.js"></script> -->
<script id="tribe-js" defer src="https://support.theeventscalendar.com/frontend.min.js"></script>
</body>
</html>